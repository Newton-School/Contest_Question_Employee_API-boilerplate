{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2023-09-16T06:38:10.127Z",
    "end": "2023-09-16T06:38:10.270Z",
    "duration": 143,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "34bfd34c-a8d2-41b9-96bb-3aeb4e3281cc",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "400d8ae1-808d-4dc2-ab11-836e4460aa75",
          "title": "Employee API",
          "fullFile": "D:\\Newton\\Contest_Question_Employee_API\\Contest_Question_Employee_API\\__tests__\\test.js",
          "file": "\\__tests__\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should create a new employee",
              "fullTitle": "Employee API should create a new employee",
              "timedOut": false,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const employee = {\n  name: 'John Doe',\n  email: 'john.doe@example.com',\n  position: 'Manager',\n};\nchai\n  .request(app)\n  .post('/api/employees')\n  .send(employee)\n  .end((err, res) => {\n    expect(res).to.have.status(201);\n    expect(res.body).to.be.an('object');\n    expect(res.body.message).to.equal('Employee created');\n    expect(res.body.employee).to.have.property('id');\n    expect(res.body.employee.name).to.equal(employee.name);\n    expect(res.body.employee.email).to.equal(employee.email);\n    expect(res.body.employee.position).to.equal(employee.position);\n    done();\n  });",
              "err": {},
              "uuid": "dc051eef-d824-4444-ba94-47f1ede6dcd7",
              "parentUUID": "400d8ae1-808d-4dc2-ab11-836e4460aa75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should get all employees",
              "fullTitle": "Employee API should get all employees",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .get('/api/employees')\n  .end((err, res) => {\n    expect(res).to.have.status(200);\n    expect(res.body).to.be.an('array');\n    done();\n  });",
              "err": {},
              "uuid": "be6d87b1-1196-4b46-8a39-69247efd4fb1",
              "parentUUID": "400d8ae1-808d-4dc2-ab11-836e4460aa75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update an existing employee",
              "fullTitle": "Employee API should update an existing employee",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const updatedEmployeeData = {\n  name: 'Updated Name',\n  position: 'Updated Position',\n};\nchai\n  .request(app)\n  .patch('/api/employees/9')\n  .send(updatedEmployeeData)\n  .end((err, res) => {\n    expect(res).to.have.status(200);\n    expect(res.body).to.be.an('object');\n    expect(res.body.message).to.equal('Employee updated');\n    expect(res.body.employee).to.have.property('id');\n    expect(res.body.employee.name).to.equal(updatedEmployeeData.name);\n    expect(res.body.employee.position).to.equal(\n      updatedEmployeeData.position\n    );\n    done();\n  });",
              "err": {},
              "uuid": "a0544fb5-10fb-4f3d-9cf6-f79b87c12754",
              "parentUUID": "400d8ae1-808d-4dc2-ab11-836e4460aa75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete an existing employee",
              "fullTitle": "Employee API should delete an existing employee",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .delete('/api/employees/12')\n  .end((err, res) => {\n    expect(res).to.have.status(200);\n    expect(res.body).to.be.an('object');\n    expect(res.body.message).to.equal('Employee deleted');\n    done();\n  });",
              "err": {},
              "uuid": "52cf21a6-7154-4f65-b548-56a90b386c41",
              "parentUUID": "400d8ae1-808d-4dc2-ab11-836e4460aa75",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dc051eef-d824-4444-ba94-47f1ede6dcd7",
            "be6d87b1-1196-4b46-8a39-69247efd4fb1",
            "a0544fb5-10fb-4f3d-9cf6-f79b87c12754",
            "52cf21a6-7154-4f65-b548-56a90b386c41"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 117,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}